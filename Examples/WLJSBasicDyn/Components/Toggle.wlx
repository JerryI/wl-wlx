Component[OptionsPattern[]] := With[{
    Dom = CreateUUID[], 
    Label = OptionValue["Label"], 
    Event = OptionValue["Event"],
    State = OptionValue["State"],
    ButtonClass = If[OptionValue["State"], "bg-wlx-500", ""],
    SpanClass   = If[OptionValue["State"], "translate-x-5", ""]
},
    <div class="flex items-center">
        <style>
            .bg-wlx-500 {
                background-color: #2dd4bf;
            }
        </style>
        <button id="{Dom}" type="button" class="bg-gray-200 relative inline-flex h-6 w-12 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 {ButtonClass}" role="switch">
            <span state="{State}" aria-hidden="true" class="translate-x-0 pointer-events-none inline-block h-5 w-6 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out {SpanClass}"></span>
        </button>
        <span class="ml-3 text-sm">
            <span class="mb-1 text-gray-900"><Label/></span>
        </span>
        <script type="module">
            const button = document.getElementById("<Dom/>");
            const span = button.firstChild;
            let state = span.getAttribute('state') == 'True';
            button.addEventListener("click", () => {
                button.classList.toggle("bg-wlx-500");
                span.classList.toggle("translate-x-5");
                state = !state;
                server.kernel.emitt("<Event/>", state ? 'True' : 'False')
            })
        </script>
    </div>
]

Options[Component] = {"State" -> False, "Label" -> "Toggle", "Event" -> Null}

Component